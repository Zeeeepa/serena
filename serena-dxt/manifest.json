{
  "dxt_version": "0.1",
  "name": "serena",
  "display_name": "Serena - Coding Agent Toolkit",
  "version": "0.1.3",
  "description": "A powerful coding agent toolkit providing semantic retrieval and editing capabilities",
  "long_description": "Serena is a comprehensive coding agent toolkit that provides essential semantic code retrieval and editing tools akin to an IDE's capabilities. It extracts code entities at the symbol level and exploits relational structure to enhance LLM efficiency. Features include file operations, symbol-based code navigation, memory management, shell command execution, and advanced code editing capabilities.",
  "author": {
    "name": "Oraios AI",
    "email": "info@oraios-ai.de",
    "url": "https://github.com/oraios/serena"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Zeeeepa/serena"
  },
  "homepage": "https://github.com/Zeeeepa/serena",
  "documentation": "https://github.com/Zeeeepa/serena/blob/main/README.md",
  "support": "https://github.com/Zeeeepa/serena/issues",
  "icon": "icon.png",
  "server": {
    "type": "python",
    "entry_point": "server/serena_mcp.py",
    "mcp_config": {
      "command": "python3",
      "args": [
        "${__dirname}/server/serena_mcp.py",
        "--project=${user_config.project_directory}",
        "--context=${user_config.context}",
        "--log-level=${user_config.log_level}",
        "--tool-timeout=${user_config.tool_timeout}"
      ],
      "env": {
        "PYTHONPATH": "${__dirname}/server/lib:${PYTHONPATH}",
        "SERENA_LOG_LEVEL": "${user_config.log_level}",
        "SERENA_PROJECT_DIR": "${user_config.project_directory}"
      }
    }
  },
  "tools": [
    {
      "name": "read_file",
      "description": "Read a file within the project directory with optional line range"
    },
    {
      "name": "create_text_file",
      "description": "Create or overwrite a file in the project directory"
    },
    {
      "name": "list_dir",
      "description": "List files and directories with optional recursion"
    },
    {
      "name": "find_file",
      "description": "Find files matching a pattern within the project"
    },
    {
      "name": "replace_regex",
      "description": "Replace text in files using regular expressions"
    },
    {
      "name": "delete_lines",
      "description": "Delete specific lines from a file"
    },
    {
      "name": "replace_lines",
      "description": "Replace specific lines in a file"
    },
    {
      "name": "insert_at_line",
      "description": "Insert text at a specific line in a file"
    },
    {
      "name": "search_for_pattern",
      "description": "Search for text patterns across project files"
    },
    {
      "name": "find_symbol",
      "description": "Find symbols (functions, classes, variables) in the codebase"
    },
    {
      "name": "find_referencing_symbols",
      "description": "Find all references to a specific symbol"
    },
    {
      "name": "get_symbols_overview",
      "description": "Get an overview of symbols in a file or project"
    },
    {
      "name": "replace_symbol_body",
      "description": "Replace the body of a function or method"
    },
    {
      "name": "insert_after_symbol",
      "description": "Insert code after a specific symbol"
    },
    {
      "name": "insert_before_symbol",
      "description": "Insert code before a specific symbol"
    },
    {
      "name": "execute_shell_command",
      "description": "Execute shell commands in the project directory"
    },
    {
      "name": "write_memory",
      "description": "Store information in agent memory"
    },
    {
      "name": "read_memory",
      "description": "Retrieve information from agent memory"
    },
    {
      "name": "list_memories",
      "description": "List all stored memories"
    },
    {
      "name": "delete_memory",
      "description": "Delete a specific memory entry"
    },
    {
      "name": "activate_project",
      "description": "Activate a project for the current session"
    },
    {
      "name": "get_current_config",
      "description": "Get the current Serena configuration"
    },
    {
      "name": "restart_language_server",
      "description": "Restart the language server for better symbol resolution"
    }
  ],
  "keywords": [
    "coding",
    "agent",
    "toolkit",
    "semantic",
    "retrieval",
    "editing",
    "symbols",
    "ide",
    "mcp",
    "python",
    "development"
  ],
  "license": "MIT",
  "user_config": {
    "project_directory": {
      "type": "directory",
      "title": "Project Directory",
      "description": "The root directory of your coding project that Serena will work with",
      "required": true
    },
    "context": {
      "type": "string",
      "title": "Context Configuration",
      "description": "Built-in context name or path to custom context YAML file",
      "default": "default",
      "required": false
    },
    "log_level": {
      "type": "string",
      "title": "Log Level",
      "description": "Set the logging verbosity level (DEBUG, INFO, WARNING, ERROR, CRITICAL)",
      "default": "INFO",
      "required": false
    },
    "tool_timeout": {
      "type": "number",
      "title": "Tool Timeout (seconds)",
      "description": "Maximum time to wait for tool execution",
      "default": 30,
      "min": 5,
      "max": 300,
      "required": false
    },
    "enable_web_dashboard": {
      "type": "boolean",
      "title": "Enable Web Dashboard",
      "description": "Enable the web-based dashboard for monitoring Serena",
      "default": false,
      "required": false
    },
    "enable_gui_log_window": {
      "type": "boolean",
      "title": "Enable GUI Log Window",
      "description": "Enable the GUI log window (may not work on all platforms)",
      "default": false,
      "required": false
    }
  },
  "compatibility": {
    "claude_desktop": ">=0.10.0",
    "platforms": ["darwin", "win32", "linux"],
    "runtimes": {
      "python": ">=3.11,<3.12"
    }
  }
}

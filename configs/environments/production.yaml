# Production Environment Configuration for Serena Orchestrator
# This configuration is optimized for production deployment with security and performance

environment:
  name: "production"
  description: "Production deployment configuration"
  version: "2.0"

# Security Configuration
security:
  # Authentication settings
  authentication:
    enabled: true
    method: "jwt"  # jwt, oauth2, api_key
    jwt_secret: "${JWT_SECRET}"
    token_expiry: "24h"
    refresh_token_expiry: "7d"
  
  # API Security
  api_security:
    rate_limiting:
      enabled: true
      requests_per_minute: 100
      burst_limit: 200
    cors:
      enabled: true
      allowed_origins: ["https://yourdomain.com"]
      allowed_methods: ["GET", "POST", "PUT", "DELETE"]
      allowed_headers: ["Authorization", "Content-Type"]
    
  # MCP Tools Security
  mcp_security:
    sandbox_mode: true
    allowed_commands:
      - "ls"
      - "pwd"
      - "cat"
      - "grep"
      - "find"
      - "python3"
      - "node"
      - "npm"
      - "git status"
      - "git log"
    forbidden_commands:
      - "rm -rf"
      - "sudo"
      - "su"
      - "chmod 777"
      - "format"
      - "fdisk"
      - "dd"
    max_execution_time: 30
    max_file_size: "10MB"

# Service Configuration
services:
  # Frontend Service
  frontend:
    port: 3000
    host: "0.0.0.0"
    ssl:
      enabled: true
      cert_file: "/etc/ssl/certs/frontend.crt"
      key_file: "/etc/ssl/private/frontend.key"
    static_files:
      cache_duration: "1h"
      compression: true
  
  # Backend API Service
  backend:
    port: 8000
    host: "0.0.0.0"
    workers: 4
    ssl:
      enabled: true
      cert_file: "/etc/ssl/certs/backend.crt"
      key_file: "/etc/ssl/private/backend.key"
    timeout: 30
    max_request_size: "50MB"
  
  # MCP Server
  mcp_server:
    port: 8080
    host: "127.0.0.1"  # Internal only
    max_connections: 100
    timeout: 60
  
  # WebSocket Service
  websocket:
    port: 9000
    host: "0.0.0.0"
    max_connections: 1000
    heartbeat_interval: 30

# Database Configuration
database:
  # Primary database for application data
  primary:
    type: "postgresql"
    host: "${DB_HOST}"
    port: 5432
    database: "${DB_NAME}"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
    ssl_mode: "require"
    pool_size: 20
    max_overflow: 30
    pool_timeout: 30
    pool_recycle: 3600
  
  # Redis for caching and sessions
  redis:
    host: "${REDIS_HOST}"
    port: 6379
    password: "${REDIS_PASSWORD}"
    database: 0
    ssl: true
    pool_size: 10
    timeout: 5

# Agent Configuration
agents:
  # Sub-agent settings
  sub_agents:
    max_concurrent: 10
    default_timeout: 300
    memory_limit: "2GB"
    cpu_limit: "1.0"
    restart_policy: "on-failure"
    max_restarts: 3
  
  # Agent templates
  templates:
    coding_agent:
      model: "gemini-1.5-pro"
      max_tokens: 8192
      temperature: 0.7
      tools: ["file_tools", "symbol_tools", "git_tools"]
      memory_enabled: true
    
    research_agent:
      model: "gemini-1.5-pro"
      max_tokens: 8192
      temperature: 0.3
      tools: ["web_search", "document_analysis", "knowledge_base"]
      memory_enabled: true
    
    testing_agent:
      model: "gemini-1.5-flash"
      max_tokens: 4096
      temperature: 0.1
      tools: ["test_tools", "coverage_tools", "performance_tools"]
      memory_enabled: false

# MCP Tools Configuration
mcp_tools:
  # WSL2 Configuration
  wsl2:
    enabled: false  # Disabled in production (Windows only)
    default_distribution: "Ubuntu"
    max_execution_time: 60
    working_directory: "/home"
  
  # Terminal Configuration
  terminal:
    enabled: true
    sandbox_mode: true
    max_execution_time: 30
    allowed_paths: ["./", "/tmp/", "/var/tmp/"]
    forbidden_paths: ["/etc/", "/root/", "/sys/", "/proc/"]
  
  # Web Search Configuration
  web_search:
    enabled: true
    search_engines: ["duckduckgo"]
    max_results: 10
    safe_search: true
    timeout: 10
    rate_limit: 60  # requests per hour
  
  # File System Configuration
  file_system:
    enabled: true
    max_file_size: "10MB"
    allowed_extensions: [".txt", ".md", ".py", ".js", ".json", ".yaml", ".yml", ".log"]
    forbidden_extensions: [".exe", ".bat", ".sh", ".ps1"]
    scan_for_secrets: true
  
  # Docker Configuration
  docker:
    enabled: true
    read_only: true
    allowed_commands: ["ps", "images", "logs", "inspect", "stats"]
    forbidden_commands: ["rm", "rmi", "kill", "stop", "start", "restart"]
  
  # Git Configuration
  git:
    enabled: true
    read_only: true
    allowed_commands: ["status", "log", "diff", "show", "branch", "remote", "blame"]
    forbidden_commands: ["push", "pull", "merge", "rebase", "reset", "checkout", "commit"]

# Monitoring Configuration
monitoring:
  # Health checks
  health_checks:
    enabled: true
    interval: 30  # seconds
    timeout: 10   # seconds
    endpoints:
      - "/health"
      - "/ready"
      - "/metrics"
  
  # Metrics collection
  metrics:
    enabled: true
    collection_interval: 60  # seconds
    retention_days: 30
    export_format: "prometheus"
  
  # Logging
  logging:
    level: "INFO"
    format: "json"
    output: "file"
    file_path: "/var/log/serena/app.log"
    max_file_size: "100MB"
    backup_count: 10
    rotation: "daily"
  
  # Alerting
  alerting:
    enabled: true
    channels:
      - type: "email"
        recipients: ["admin@yourdomain.com"]
        severity: ["critical", "warning"]
      - type: "slack"
        webhook_url: "${SLACK_WEBHOOK_URL}"
        severity: ["critical"]
    
    thresholds:
      cpu_usage: 85
      memory_usage: 90
      disk_usage: 85
      response_time: 5000  # milliseconds
      error_rate: 5        # percentage

# Performance Configuration
performance:
  # Caching
  caching:
    enabled: true
    default_ttl: 3600  # seconds
    max_memory: "1GB"
    compression: true
  
  # Connection pooling
  connection_pooling:
    enabled: true
    max_connections: 100
    min_connections: 10
    connection_timeout: 30
  
  # Resource limits
  resource_limits:
    max_memory_per_agent: "2GB"
    max_cpu_per_agent: 1.0
    max_concurrent_requests: 1000
    max_request_timeout: 300

# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  storage:
    type: "s3"
    bucket: "${BACKUP_BUCKET}"
    region: "${AWS_REGION}"
    encryption: true
  
  # What to backup
  include:
    - "database"
    - "agent_configs"
    - "user_data"
    - "logs"
  
  exclude:
    - "temp_files"
    - "cache"
    - "session_data"

# Deployment Configuration
deployment:
  # Container settings
  container:
    image: "serena-orchestrator:latest"
    registry: "${DOCKER_REGISTRY}"
    pull_policy: "Always"
    restart_policy: "unless-stopped"
  
  # Scaling
  scaling:
    min_replicas: 2
    max_replicas: 10
    target_cpu_utilization: 70
    target_memory_utilization: 80
  
  # Health checks
  health_check:
    initial_delay: 30
    period: 10
    timeout: 5
    failure_threshold: 3
    success_threshold: 1

# Environment Variables
environment_variables:
  # API Keys (set via secrets management)
  OPENAI_API_KEY: "${OPENAI_API_KEY}"
  ANTHROPIC_API_KEY: "${ANTHROPIC_API_KEY}"
  GOOGLE_API_KEY: "${GOOGLE_API_KEY}"
  
  # Database
  DB_HOST: "${DB_HOST}"
  DB_NAME: "${DB_NAME}"
  DB_USER: "${DB_USER}"
  DB_PASSWORD: "${DB_PASSWORD}"
  
  # Redis
  REDIS_HOST: "${REDIS_HOST}"
  REDIS_PASSWORD: "${REDIS_PASSWORD}"
  
  # Security
  JWT_SECRET: "${JWT_SECRET}"
  ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
  
  # External services
  SLACK_WEBHOOK_URL: "${SLACK_WEBHOOK_URL}"
  BACKUP_BUCKET: "${BACKUP_BUCKET}"
  AWS_REGION: "${AWS_REGION}"
  
  # Application settings
  APP_ENV: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  
  # Feature flags
  ENABLE_TELEMETRY: "true"
  ENABLE_ANALYTICS: "true"
  ENABLE_MONITORING: "true"

# Feature Flags
features:
  # Core features
  sub_agent_orchestration: true
  mcp_tools_integration: true
  health_monitoring: true
  performance_metrics: true
  
  # Advanced features
  auto_scaling: true
  load_balancing: true
  circuit_breaker: true
  rate_limiting: true
  
  # Experimental features
  ai_optimization: false
  predictive_scaling: false
  advanced_analytics: false

# Compliance and Governance
compliance:
  # Data protection
  data_protection:
    encryption_at_rest: true
    encryption_in_transit: true
    data_retention_days: 365
    anonymization: true
  
  # Audit logging
  audit_logging:
    enabled: true
    log_all_requests: true
    log_data_access: true
    retention_days: 2555  # 7 years
  
  # Privacy
  privacy:
    gdpr_compliance: true
    ccpa_compliance: true
    data_minimization: true
    consent_management: true
